/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './@routes/__root'
import { Route as LocaleRouteImport } from './@routes/$locale'
import { Route as IndexRouteImport } from './@routes/index'
import { Route as LocaleIndexRouteImport } from './@routes/$locale/index'
import { Route as LocaleTransactionRouteImport } from './@routes/$locale/transaction'
import { Route as LocaleInventoryRouteImport } from './@routes/$locale/inventory'
import { Route as LocaleTransactionIndexRouteImport } from './@routes/$locale/transaction/index'
import { Route as LocaleInventoryIndexRouteImport } from './@routes/$locale/inventory/index'
import { Route as LocaleTransactionOutputRouteImport } from './@routes/$locale/transaction/output'
import { Route as LocaleTransactionListRouteImport } from './@routes/$locale/transaction/list'
import { Route as LocaleTransactionInputRouteImport } from './@routes/$locale/transaction/input'
import { Route as LocaleTransactionIdRouteImport } from './@routes/$locale/transaction/$id'
import { Route as LocaleInventoryListRouteImport } from './@routes/$locale/inventory/list'
import { Route as LocaleInventoryCreateRouteImport } from './@routes/$locale/inventory/create'
import { Route as LocaleInventoryIdRouteImport } from './@routes/$locale/inventory/$id'
import { Route as LocaleTransactionIdViewRouteImport } from './@routes/$locale/transaction/$id/view'
import { Route as LocaleTransactionIdEditRouteImport } from './@routes/$locale/transaction/$id/edit'
import { Route as LocaleInventoryIdViewRouteImport } from './@routes/$locale/inventory/$id/view'
import { Route as LocaleInventoryIdOutputRouteImport } from './@routes/$locale/inventory/$id/output'
import { Route as LocaleInventoryIdInputRouteImport } from './@routes/$locale/inventory/$id/input'
import { Route as LocaleInventoryIdEditRouteImport } from './@routes/$locale/inventory/$id/edit'

const LocaleRoute = LocaleRouteImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleIndexRoute = LocaleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleTransactionRoute = LocaleTransactionRouteImport.update({
  id: '/transaction',
  path: '/transaction',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleInventoryRoute = LocaleInventoryRouteImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleTransactionIndexRoute = LocaleTransactionIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleTransactionRoute,
} as any)
const LocaleInventoryIndexRoute = LocaleInventoryIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleInventoryRoute,
} as any)
const LocaleTransactionOutputRoute = LocaleTransactionOutputRouteImport.update({
  id: '/output',
  path: '/output',
  getParentRoute: () => LocaleTransactionRoute,
} as any)
const LocaleTransactionListRoute = LocaleTransactionListRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => LocaleTransactionRoute,
} as any)
const LocaleTransactionInputRoute = LocaleTransactionInputRouteImport.update({
  id: '/input',
  path: '/input',
  getParentRoute: () => LocaleTransactionRoute,
} as any)
const LocaleTransactionIdRoute = LocaleTransactionIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => LocaleTransactionRoute,
} as any)
const LocaleInventoryListRoute = LocaleInventoryListRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => LocaleInventoryRoute,
} as any)
const LocaleInventoryCreateRoute = LocaleInventoryCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => LocaleInventoryRoute,
} as any)
const LocaleInventoryIdRoute = LocaleInventoryIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => LocaleInventoryRoute,
} as any)
const LocaleTransactionIdViewRoute = LocaleTransactionIdViewRouteImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleTransactionIdRoute,
} as any)
const LocaleTransactionIdEditRoute = LocaleTransactionIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => LocaleTransactionIdRoute,
} as any)
const LocaleInventoryIdViewRoute = LocaleInventoryIdViewRouteImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => LocaleInventoryIdRoute,
} as any)
const LocaleInventoryIdOutputRoute = LocaleInventoryIdOutputRouteImport.update({
  id: '/output',
  path: '/output',
  getParentRoute: () => LocaleInventoryIdRoute,
} as any)
const LocaleInventoryIdInputRoute = LocaleInventoryIdInputRouteImport.update({
  id: '/input',
  path: '/input',
  getParentRoute: () => LocaleInventoryIdRoute,
} as any)
const LocaleInventoryIdEditRoute = LocaleInventoryIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => LocaleInventoryIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/inventory': typeof LocaleInventoryRouteWithChildren
  '/$locale/transaction': typeof LocaleTransactionRouteWithChildren
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/inventory/$id': typeof LocaleInventoryIdRouteWithChildren
  '/$locale/inventory/create': typeof LocaleInventoryCreateRoute
  '/$locale/inventory/list': typeof LocaleInventoryListRoute
  '/$locale/transaction/$id': typeof LocaleTransactionIdRouteWithChildren
  '/$locale/transaction/input': typeof LocaleTransactionInputRoute
  '/$locale/transaction/list': typeof LocaleTransactionListRoute
  '/$locale/transaction/output': typeof LocaleTransactionOutputRoute
  '/$locale/inventory/': typeof LocaleInventoryIndexRoute
  '/$locale/transaction/': typeof LocaleTransactionIndexRoute
  '/$locale/inventory/$id/edit': typeof LocaleInventoryIdEditRoute
  '/$locale/inventory/$id/input': typeof LocaleInventoryIdInputRoute
  '/$locale/inventory/$id/output': typeof LocaleInventoryIdOutputRoute
  '/$locale/inventory/$id/view': typeof LocaleInventoryIdViewRoute
  '/$locale/transaction/$id/edit': typeof LocaleTransactionIdEditRoute
  '/$locale/transaction/$id/view': typeof LocaleTransactionIdViewRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/inventory/$id': typeof LocaleInventoryIdRouteWithChildren
  '/$locale/inventory/create': typeof LocaleInventoryCreateRoute
  '/$locale/inventory/list': typeof LocaleInventoryListRoute
  '/$locale/transaction/$id': typeof LocaleTransactionIdRouteWithChildren
  '/$locale/transaction/input': typeof LocaleTransactionInputRoute
  '/$locale/transaction/list': typeof LocaleTransactionListRoute
  '/$locale/transaction/output': typeof LocaleTransactionOutputRoute
  '/$locale/inventory': typeof LocaleInventoryIndexRoute
  '/$locale/transaction': typeof LocaleTransactionIndexRoute
  '/$locale/inventory/$id/edit': typeof LocaleInventoryIdEditRoute
  '/$locale/inventory/$id/input': typeof LocaleInventoryIdInputRoute
  '/$locale/inventory/$id/output': typeof LocaleInventoryIdOutputRoute
  '/$locale/inventory/$id/view': typeof LocaleInventoryIdViewRoute
  '/$locale/transaction/$id/edit': typeof LocaleTransactionIdEditRoute
  '/$locale/transaction/$id/view': typeof LocaleTransactionIdViewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/inventory': typeof LocaleInventoryRouteWithChildren
  '/$locale/transaction': typeof LocaleTransactionRouteWithChildren
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/inventory/$id': typeof LocaleInventoryIdRouteWithChildren
  '/$locale/inventory/create': typeof LocaleInventoryCreateRoute
  '/$locale/inventory/list': typeof LocaleInventoryListRoute
  '/$locale/transaction/$id': typeof LocaleTransactionIdRouteWithChildren
  '/$locale/transaction/input': typeof LocaleTransactionInputRoute
  '/$locale/transaction/list': typeof LocaleTransactionListRoute
  '/$locale/transaction/output': typeof LocaleTransactionOutputRoute
  '/$locale/inventory/': typeof LocaleInventoryIndexRoute
  '/$locale/transaction/': typeof LocaleTransactionIndexRoute
  '/$locale/inventory/$id/edit': typeof LocaleInventoryIdEditRoute
  '/$locale/inventory/$id/input': typeof LocaleInventoryIdInputRoute
  '/$locale/inventory/$id/output': typeof LocaleInventoryIdOutputRoute
  '/$locale/inventory/$id/view': typeof LocaleInventoryIdViewRoute
  '/$locale/transaction/$id/edit': typeof LocaleTransactionIdEditRoute
  '/$locale/transaction/$id/view': typeof LocaleTransactionIdViewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale'
    | '/$locale/inventory'
    | '/$locale/transaction'
    | '/$locale/'
    | '/$locale/inventory/$id'
    | '/$locale/inventory/create'
    | '/$locale/inventory/list'
    | '/$locale/transaction/$id'
    | '/$locale/transaction/input'
    | '/$locale/transaction/list'
    | '/$locale/transaction/output'
    | '/$locale/inventory/'
    | '/$locale/transaction/'
    | '/$locale/inventory/$id/edit'
    | '/$locale/inventory/$id/input'
    | '/$locale/inventory/$id/output'
    | '/$locale/inventory/$id/view'
    | '/$locale/transaction/$id/edit'
    | '/$locale/transaction/$id/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale'
    | '/$locale/inventory/$id'
    | '/$locale/inventory/create'
    | '/$locale/inventory/list'
    | '/$locale/transaction/$id'
    | '/$locale/transaction/input'
    | '/$locale/transaction/list'
    | '/$locale/transaction/output'
    | '/$locale/inventory'
    | '/$locale/transaction'
    | '/$locale/inventory/$id/edit'
    | '/$locale/inventory/$id/input'
    | '/$locale/inventory/$id/output'
    | '/$locale/inventory/$id/view'
    | '/$locale/transaction/$id/edit'
    | '/$locale/transaction/$id/view'
  id:
    | '__root__'
    | '/'
    | '/$locale'
    | '/$locale/inventory'
    | '/$locale/transaction'
    | '/$locale/'
    | '/$locale/inventory/$id'
    | '/$locale/inventory/create'
    | '/$locale/inventory/list'
    | '/$locale/transaction/$id'
    | '/$locale/transaction/input'
    | '/$locale/transaction/list'
    | '/$locale/transaction/output'
    | '/$locale/inventory/'
    | '/$locale/transaction/'
    | '/$locale/inventory/$id/edit'
    | '/$locale/inventory/$id/input'
    | '/$locale/inventory/$id/output'
    | '/$locale/inventory/$id/view'
    | '/$locale/transaction/$id/edit'
    | '/$locale/transaction/$id/view'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleRoute: typeof LocaleRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/'
      fullPath: '/$locale/'
      preLoaderRoute: typeof LocaleIndexRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/transaction': {
      id: '/$locale/transaction'
      path: '/transaction'
      fullPath: '/$locale/transaction'
      preLoaderRoute: typeof LocaleTransactionRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/inventory': {
      id: '/$locale/inventory'
      path: '/inventory'
      fullPath: '/$locale/inventory'
      preLoaderRoute: typeof LocaleInventoryRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/transaction/': {
      id: '/$locale/transaction/'
      path: '/'
      fullPath: '/$locale/transaction/'
      preLoaderRoute: typeof LocaleTransactionIndexRouteImport
      parentRoute: typeof LocaleTransactionRoute
    }
    '/$locale/inventory/': {
      id: '/$locale/inventory/'
      path: '/'
      fullPath: '/$locale/inventory/'
      preLoaderRoute: typeof LocaleInventoryIndexRouteImport
      parentRoute: typeof LocaleInventoryRoute
    }
    '/$locale/transaction/output': {
      id: '/$locale/transaction/output'
      path: '/output'
      fullPath: '/$locale/transaction/output'
      preLoaderRoute: typeof LocaleTransactionOutputRouteImport
      parentRoute: typeof LocaleTransactionRoute
    }
    '/$locale/transaction/list': {
      id: '/$locale/transaction/list'
      path: '/list'
      fullPath: '/$locale/transaction/list'
      preLoaderRoute: typeof LocaleTransactionListRouteImport
      parentRoute: typeof LocaleTransactionRoute
    }
    '/$locale/transaction/input': {
      id: '/$locale/transaction/input'
      path: '/input'
      fullPath: '/$locale/transaction/input'
      preLoaderRoute: typeof LocaleTransactionInputRouteImport
      parentRoute: typeof LocaleTransactionRoute
    }
    '/$locale/transaction/$id': {
      id: '/$locale/transaction/$id'
      path: '/$id'
      fullPath: '/$locale/transaction/$id'
      preLoaderRoute: typeof LocaleTransactionIdRouteImport
      parentRoute: typeof LocaleTransactionRoute
    }
    '/$locale/inventory/list': {
      id: '/$locale/inventory/list'
      path: '/list'
      fullPath: '/$locale/inventory/list'
      preLoaderRoute: typeof LocaleInventoryListRouteImport
      parentRoute: typeof LocaleInventoryRoute
    }
    '/$locale/inventory/create': {
      id: '/$locale/inventory/create'
      path: '/create'
      fullPath: '/$locale/inventory/create'
      preLoaderRoute: typeof LocaleInventoryCreateRouteImport
      parentRoute: typeof LocaleInventoryRoute
    }
    '/$locale/inventory/$id': {
      id: '/$locale/inventory/$id'
      path: '/$id'
      fullPath: '/$locale/inventory/$id'
      preLoaderRoute: typeof LocaleInventoryIdRouteImport
      parentRoute: typeof LocaleInventoryRoute
    }
    '/$locale/transaction/$id/view': {
      id: '/$locale/transaction/$id/view'
      path: '/view'
      fullPath: '/$locale/transaction/$id/view'
      preLoaderRoute: typeof LocaleTransactionIdViewRouteImport
      parentRoute: typeof LocaleTransactionIdRoute
    }
    '/$locale/transaction/$id/edit': {
      id: '/$locale/transaction/$id/edit'
      path: '/edit'
      fullPath: '/$locale/transaction/$id/edit'
      preLoaderRoute: typeof LocaleTransactionIdEditRouteImport
      parentRoute: typeof LocaleTransactionIdRoute
    }
    '/$locale/inventory/$id/view': {
      id: '/$locale/inventory/$id/view'
      path: '/view'
      fullPath: '/$locale/inventory/$id/view'
      preLoaderRoute: typeof LocaleInventoryIdViewRouteImport
      parentRoute: typeof LocaleInventoryIdRoute
    }
    '/$locale/inventory/$id/output': {
      id: '/$locale/inventory/$id/output'
      path: '/output'
      fullPath: '/$locale/inventory/$id/output'
      preLoaderRoute: typeof LocaleInventoryIdOutputRouteImport
      parentRoute: typeof LocaleInventoryIdRoute
    }
    '/$locale/inventory/$id/input': {
      id: '/$locale/inventory/$id/input'
      path: '/input'
      fullPath: '/$locale/inventory/$id/input'
      preLoaderRoute: typeof LocaleInventoryIdInputRouteImport
      parentRoute: typeof LocaleInventoryIdRoute
    }
    '/$locale/inventory/$id/edit': {
      id: '/$locale/inventory/$id/edit'
      path: '/edit'
      fullPath: '/$locale/inventory/$id/edit'
      preLoaderRoute: typeof LocaleInventoryIdEditRouteImport
      parentRoute: typeof LocaleInventoryIdRoute
    }
  }
}

interface LocaleInventoryIdRouteChildren {
  LocaleInventoryIdEditRoute: typeof LocaleInventoryIdEditRoute
  LocaleInventoryIdInputRoute: typeof LocaleInventoryIdInputRoute
  LocaleInventoryIdOutputRoute: typeof LocaleInventoryIdOutputRoute
  LocaleInventoryIdViewRoute: typeof LocaleInventoryIdViewRoute
}

const LocaleInventoryIdRouteChildren: LocaleInventoryIdRouteChildren = {
  LocaleInventoryIdEditRoute: LocaleInventoryIdEditRoute,
  LocaleInventoryIdInputRoute: LocaleInventoryIdInputRoute,
  LocaleInventoryIdOutputRoute: LocaleInventoryIdOutputRoute,
  LocaleInventoryIdViewRoute: LocaleInventoryIdViewRoute,
}

const LocaleInventoryIdRouteWithChildren =
  LocaleInventoryIdRoute._addFileChildren(LocaleInventoryIdRouteChildren)

interface LocaleInventoryRouteChildren {
  LocaleInventoryIdRoute: typeof LocaleInventoryIdRouteWithChildren
  LocaleInventoryCreateRoute: typeof LocaleInventoryCreateRoute
  LocaleInventoryListRoute: typeof LocaleInventoryListRoute
  LocaleInventoryIndexRoute: typeof LocaleInventoryIndexRoute
}

const LocaleInventoryRouteChildren: LocaleInventoryRouteChildren = {
  LocaleInventoryIdRoute: LocaleInventoryIdRouteWithChildren,
  LocaleInventoryCreateRoute: LocaleInventoryCreateRoute,
  LocaleInventoryListRoute: LocaleInventoryListRoute,
  LocaleInventoryIndexRoute: LocaleInventoryIndexRoute,
}

const LocaleInventoryRouteWithChildren = LocaleInventoryRoute._addFileChildren(
  LocaleInventoryRouteChildren,
)

interface LocaleTransactionIdRouteChildren {
  LocaleTransactionIdEditRoute: typeof LocaleTransactionIdEditRoute
  LocaleTransactionIdViewRoute: typeof LocaleTransactionIdViewRoute
}

const LocaleTransactionIdRouteChildren: LocaleTransactionIdRouteChildren = {
  LocaleTransactionIdEditRoute: LocaleTransactionIdEditRoute,
  LocaleTransactionIdViewRoute: LocaleTransactionIdViewRoute,
}

const LocaleTransactionIdRouteWithChildren =
  LocaleTransactionIdRoute._addFileChildren(LocaleTransactionIdRouteChildren)

interface LocaleTransactionRouteChildren {
  LocaleTransactionIdRoute: typeof LocaleTransactionIdRouteWithChildren
  LocaleTransactionInputRoute: typeof LocaleTransactionInputRoute
  LocaleTransactionListRoute: typeof LocaleTransactionListRoute
  LocaleTransactionOutputRoute: typeof LocaleTransactionOutputRoute
  LocaleTransactionIndexRoute: typeof LocaleTransactionIndexRoute
}

const LocaleTransactionRouteChildren: LocaleTransactionRouteChildren = {
  LocaleTransactionIdRoute: LocaleTransactionIdRouteWithChildren,
  LocaleTransactionInputRoute: LocaleTransactionInputRoute,
  LocaleTransactionListRoute: LocaleTransactionListRoute,
  LocaleTransactionOutputRoute: LocaleTransactionOutputRoute,
  LocaleTransactionIndexRoute: LocaleTransactionIndexRoute,
}

const LocaleTransactionRouteWithChildren =
  LocaleTransactionRoute._addFileChildren(LocaleTransactionRouteChildren)

interface LocaleRouteChildren {
  LocaleInventoryRoute: typeof LocaleInventoryRouteWithChildren
  LocaleTransactionRoute: typeof LocaleTransactionRouteWithChildren
  LocaleIndexRoute: typeof LocaleIndexRoute
}

const LocaleRouteChildren: LocaleRouteChildren = {
  LocaleInventoryRoute: LocaleInventoryRouteWithChildren,
  LocaleTransactionRoute: LocaleTransactionRouteWithChildren,
  LocaleIndexRoute: LocaleIndexRoute,
}

const LocaleRouteWithChildren =
  LocaleRoute._addFileChildren(LocaleRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleRoute: LocaleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
